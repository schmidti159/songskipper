version: "3"
services:
  # application
  frontend:
    image: songskipper/frontend:0.0.1-SNAPSHOT
    ports:
      - "8080:80"
    depends_on:
      - backend
    environment:
      - NGINX_PORT=80
      - SONGSKIPPER_BACKEND=http://backend:8080

  backend:
    image: songskipper/backend:0.0.1-SNAPSHOT
    restart: always
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/songskipper
      - SPRING_DATASOURCE_USERNAME=songskipper
      - SPRING_DATASOURCE_PASSWORD=changeit
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect

  db:
    image: postgres:14.1-alpine
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=changeit
      - POSTGRES_USER=songskipper
      - POSTGRES_DB=songskipper
    volumes:
      - "songskipper-postgresql:/var/lib/postgresql/data"

  # monitoring and metrics
  nginx-frontend-metrics-exporter:
    image: nginx/nginx-prometheus-exporter:0.10.0
    environment:
      - SCRAPE_URI=http://frontend:8080/metrics
      - TELEMETRY_PATH=/prometheus
      - NGINX_RETRIES=1
  prometheus:
    image: prom/prometheus:v2.32.1
    ports:
      - "9090:9090"
    volumes:
      - "./docker/prometheus.yml:/etc/prometheus/prometheus.yml"
      - "songskipper-prometheus:/prometheus"
  grafana:
    image: grafana/grafana:8.3.4
    ports:
      - "3000:3000"
    volumes:
      - "songskipper-grafana:/var/lib/grafana"
      - "./docker/grafana-provisioning:/etc/grafana/provisioning:ro"

  # logging
  filebeat:
    image: docker.elastic.co/beats/filebeat-oss:7.10.2
    # enter your user-id or root
    user: root
    # disable strict permission checks
    command: ["-e", "--strict.perms=false"]
    volumes:
      - ./docker/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    environment:
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - discovery.type=single-node
      - cluster.name=songskipper-elasticsearch
    volumes:
      - songskipper-elasticsearch:/usr/share/elasticsearch/data
  kibana:
    image: docker.elastic.co/kibana/kibana-oss:7.10.2
    ports:
      - "5601:5601"
    environment:
      - SERVER_NAME=songskipper-kibana
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200

volumes:
  songskipper-postgresql:
  songskipper-prometheus:
  songskipper-grafana:
  songskipper-elasticsearch:

